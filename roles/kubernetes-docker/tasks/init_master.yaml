---
- name: Register number of cpu
  shell: cat /proc/cpuinfo |grep CPU|wc -l
  register: numCPU
- name: Reset latest configurations on init master
  shell: kubeadm reset --force
  tags: reset_init_master
- name: Init cluster with 1 cpu
  shell: |
    kubeadm init --apiserver-advertise-address="{{ first_master }}" --pod-network-cidr "{{ pod_network }}" --control-plane-endpoint "{{ control_plane_endpoint }}" --upload-certs --ignore-preflight-errors=NumCPU &> "{{ kubeadm_init_log_dir }}/{{ kubeadm_init_log }}" 
  when: numCPU.stdout == '1'
- name: Init cluster
  shell: |
    kubeadm init --apiserver-advertise-address="{{ first_master }}" --pod-network-cidr "{{ pod_network }}" --control-plane-endpoint "{{ control_plane_endpoint }}" --upload-certs &> "{{ kubeadm_init_log_dir }}/{{ kubeadm_init_log }}"
  when: numCPU.stdout > '1'
- name: Post init command
  shell: |
   unalias cp
   mkdir -p $HOME/.kube
   cp -f /etc/kubernetes/admin.conf $HOME/.kube/config
   chown $(id -u):$(id -g) $HOME/.kube/config
- name: Copy flannel network template
  template:
    src: "flannel_network.yaml.j2"
    dest: "{{ manifest_dir }}/flannel_network.yaml"
- name: Apply flannel network
  shell: kubectl apply -f "{{ manifest_dir }}/flannel_network.yaml"
- name: Apply kubernetes dashboard
  shell: kubectl apply -f "{{ dashboard }}"
- name: Create service account and clusterrolebinding for kubernetes dashboard
  shell: |
     kubectl create serviceaccount dashboard -n default
     kubectl create clusterrolebinding dashboard-admin -n default --clusterrole=cluster-admin --serviceaccount=default:dashboard